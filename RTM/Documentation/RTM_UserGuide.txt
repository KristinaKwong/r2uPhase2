# TransLink Regional Transportation Model - Phase 3 Userguide

# Introduction


# Model Format

The model is now delivered as a collection of plain text files with an initial script to build the emmebank
in which the model is run. An emme project file (.emp) is provided to reference all required folders and to link
in an empty, minimally sized databank in the Template/ folder. This is only provided to allow emme modeller tools to
run before an RTM phase 3 databank has been initialized.

**RTM Phase 3 Folder Structure**

~~~
RTM.emp
BaseNetworks/
BaseNetworks/Inputs/
Documentation/
Logbook/
Media/
Scripts/
Template/
Views/
Worksheets/
~~~

## RTM.emp
This file contains all of the project information for the EMME model and allows the software
to reference all of the distributed folders consistantly.

## BaseNetworks/
This folder contains all of the files required to build a databank and contains:
* Network batchin files for horizon years 2011, 2015, 2030 and 2045
* External demand matrices
* Definitions of ensembles, modes, transit vehicles
* Networks: Auto, Transit, Turns for 4 horizon years and 3 time periods
* Starter Skims
* External demand bike scores
* Calibration factors K-factors
* Ensembles

## BaseNetworks/Inputs/
This folder contains the default model assumptions for each horizon year, a copy
of this folder is placed with each databank initialized by the InitEmmebank tool.

* Demographics from metro Vancouver
* Dummies for town centres / other
* Geographics
* Park n ride
* Batch input files used in truck model

## Documentation/
A copy of the model userguide and other technical documentation.

## Logbook/
This folder holds the logbook information generated by EMME Modeller tools.

## Media/
Shapefiles used as background boundaries in EMME worksheets are provided here, layers for the following are provided:
* Zone Boundary for 1700 Zone System
* National Road Network Centerlines extracted for the modelled region
* Municipal Boundaries
* Zone Boundaries and Municipal Boundaries from the earlier 641 Zone System

## Scripts/

## Template/
A minimally dimensioned EMME databank is distributed to allow Modeller tools to run before an RTM databank has been initailized.
No information is held in this template databank, it is provided only to allow Modeller to initialize an RTM databank from the provided text files.

## Views/
Definitions for some standard views are provided in the EMME environment. Standard views for the GVRD, FVRD, each GY aggregation and each municiaplity are provided.
## Worksheets/

# Receiving/Relocating an RTM Model

All file references have been updated to be relative to the provided emme project file (RTM.emp). The only exception to this are
references to modeller python files in the EMME toolboxes. A batch file has been provided in Scripts/relocate_tools.bat to
link the toolboxes to the appropriate file if the project is moved.

This batch file must be run whenever the model is initially unpacked from a zip file, or whenever the project is moved to a different
folder on the hard disk. If this is not done, Modeller will not be able to run any of the RTM scripting.

If the following error is encountered when running this script:

~~~
Traceback (most recent call last):
  File "toolbox_modify.py", line 155, in <module>
    set_tools_to_current_root(toolbox_path, root_dir_name)
  File "toolbox_modify.py", line 129, in set_tools_to_current_root
    with ToolboxWrap(toolbox_path) as toolbox:
  File "toolbox_modify.py", line 60, in __init__
    self.documents = self.connection.execute('select * from documents').fetchall()
sqlite3.DatabaseError: file is encrypted or is not a database
~~~

It is likely that a Modeller instance is running and has locked the toolbox file. Close all Modeller instances and run the
script again.

## Text Format


### csv files
### Base Networks Folder


### Documentation

# Databank Initialization

Once the text files have been unpacked and the scripts relocated, open the emme modeller toolbox and run the InitEmmebank tool,
this will allow an RTM Phase 3 Databank to be initialized and linked into the current project. The tool requires a folder name which
will be created, and the name of the databank to be shown in the project.

The new

![The Initialize Emmebank Tool](./InitEmmebank_screen.png)

# Running the RTM Phase 3 Model

![The RTM Phase 3 Model Run Tool](./FullModelRun_screen.png)

# Network Coding
## Extra Attributes

During a model run, a single master scenario is copied into 3 time of day specific scenarios for assignment.
The network parameters are coded in extra attributes in the master scenario and copied to the appropriate place
when the copies are made. A correspondence of from the master scenario to the time of day attributes is presented below.

|Master Scenario Attribute|     Time of Day Attributes    |
|:-----------------------:|:-------------------------------:|
|lanes                    |lanesam, lanesmd, lanespm |
|vdf                      |vdfam, vdfmd, vdfpm       |
|tpf                      |tpfam, tpfmd, tpfpm       |
|tolls                    |tollam, tollmd, tollpm    |
|hdwy                     |hdwyam, hdwymd, hdwypm    |

## Export Network Tool

Network coding should be done in the master scenarios only, as the time of day specific networks are overwritten
during each model run. The export network tool is responsible for exporting all required information from a scenario
for later import into the model run process.

![The Network Export Tool](./ExportNetwork_screen.png)

# Scripts Folder

The Scripts folder contains the main toolboxes and python codes used for running the model. Figure XX shows the files
inside the folder.

## Util folder

The Util folder contains the Util toolbox and associated python script. The Util toolbox contains helper functions that
get used repeatedly within a model run. These helper functions are usually called from other Python Scripts. Examples include
helper functions and how to invoke them include the following:

 - Matrix Calculator : util.compute_matrix(<Arguments>)

 - Extra Attribute Calculator: util.emme_link_calc(<Arguments>)

 - Importing Matrix Data in Numpy Array format : util.get_matrix_numpy(<Arguments>)

These helper functions reduce the likelihood of making coding mistakes and make the overall code less repetitive and easier
to read.

## Phase3Scripts Folder

This folder contains the model's main python tool box and associated scripts. Figure XX is a screenshot of the Phase3Scripts folder.
The following is a brief description of each script in the order of model run.

 - InitEmmebank.py - Creates a new databank which contains the building block of the model run:
                     1) Databank Size
                     2) Auto and Transit Networks for years 2011, 2015, 2030 and 2045
                     3) Ensembles
                     4) Functions: Volume-delay, turn penalties, transit time functions

 - 00_RunModel.py  - This the main model run wrapper and launches the subsequent model scripts. Figure XX is a screenshot of the run page
		     with required user inputs:
		     1) Model horizon year (2011, 2015, 2030 or 2045)
	             2) Base year Network Scenario (1000 - 2011, 2000 - 2015, 3000 - 2030, 4000 - 2045)
	             3) Global Model Cycles: Default is four cycles
                     4) Demographics (households, population and employment) and Geographics Inputs (parking, car share zone)
                     5) Trip Distribution Model Number of Iterations _ Default is 60
	             6) Assignment Convergence Criteria
 		     7) Toggles for congested/capacitated Transit Assignment
	             8) Number of Processors Specification


 - 01_CreateScenarios.py  - Creates AM, MD and PM network scenarios from main base year scenario. For example, if the user chose scenario 1000,
                            this script will create AM, MD and PM scenarios with the correct time of day network attributes (e.g. bus priority
                            lanes and headways by time of day.


 - 02_DataImport.py  - Imports/generates data used in a model run such as:
                       1) Values of Time
                       2) Transit perception Factors
                       3) External Demand and Trip Distribution K-Factors
                       4) Starter Skims

 - 03_DataGeneration.py  - Calculates attributes used in a model run such as:
		           1) Population and employment densities
                           2) Accessibility variables (e.g. number of jobs accessible from a zone within 30 minutes)

 - 04_SocioEconomicSegmentation.py and 05_VehicleAvailability.py - These two scripts split household data provided by Metro-Vancouver
   into segments by household size x number of workers x Income Category x Auto Ownership using a series of econometric logit models.

 - 06_TripProductions.py and 07_TripAttractions.py - This is the trip generation phase of the model. It includes multiplying econometrically
   estimated, purpose-specific, production/attraction trip rates by houselhold/population and employment segments (depending on the trip purpose).

 - 08_Blended_Skims - Takes AM, MD and PM auto and transit skims and blends them by trip purpose to create 'daily' skims to be used in the trip
                      distribution and mode choice models

 - 09-01_HbWork.py - 09-09_NhbOther.py - This series of nine scripts include the trip distribution, mode choice and time of day factoring models for each of the
                      the nine trip purposes.

 - 09-00_ModeChoiceUtilities.py - Contains various helper functions that get used repeatedly in the trip distribution/mode choice models such as:
                                  1) trip distribution gravity model
                                  2) Mode availability conditions

 - 09-10_TruckModel.py - Runs the truck model and generates six origin - destination tables - 2 truck types (light and heavy) x 3 time periods

 - 10-01_AutoAssignment.py - Runs the auto vehicle traffic assignment for the three time periods

 - 10-02_TransitAssignment.py - Runs the transit assignment (bus, rail and WCE) for the three time periods

Other scripts that are included in the Phase3Scripts but not part of a model run:

 - 12_DataExport.py - Main model outputs are stored in database format inside the project folder. This tool exports this data to .csv format inside the
                      Outputs folder. The outputs include:
                      1) Gy - Gy trip summaries by purpose, mode and time period (AM, MD, PM and Daily). One important thing to note is the Daily trip
                         summaries are in production - attracion (P-A) format whereas the time of day results are in origin - destination (O-D) format.
                      2) Network-level summaries: Vehicle volumes by vehicle class, transit volumes, travel time, distance and speed on each link

 - ImportNetwork.py and ExportNetwork.py - These two tools allow the import/export of current/future networks after they've been modified. More details will
                                           be provided in the following section using examples.